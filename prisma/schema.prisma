// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Location {
  country  String
  province String
  city     String
  address  String?
}

model LocationModel {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  user     User?   @relation(fields: [userId], references: [id])
  userId   String? @db.ObjectId
  country  String
  province String
  city     String
  address  String?
}

model EmailPreferences {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  user            User    @relation(fields: [userId], references: [id])
  userId          String  @unique @db.ObjectId
  jobUpdates      Boolean @default(true)
  messageThread   Boolean @default(true)
  insightfulTips  Boolean @default(false)
  promoNewsletter Boolean @default(false)
}

model User {
  id               String            @id @default(auto()) @map("_id") @db.ObjectId
  createdAt        DateTime          @default(now())
  company          Company?          @relation(fields: [companyId], references: [id])
  companyId        String?           @db.ObjectId
  employee         Employee?         @relation(fields: [employeeId], references: [id])
  employeeId       String?           @unique @db.ObjectId
  firstName        String
  lastName         String
  email            String            @unique
  profilePic       String?
  otp              Int?
  role             String
  accountType      String?
  verified         Boolean           @default(false)
  password         String
  phoneNumber      Int?
  location         LocationModel[]
  emailPreferences EmailPreferences?
}

model Company {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime      @default(now())
  user            User[]
  companyName     String
  industry        String?
  directory       String
  noOfEmployees   Int?
  yearEstablished Int?
  description     String
  webUrl          String?
  companyLogo     String?
  socialLinks     SocialLinks[]
}

model Employee {
  createdAt      DateTime         @default(now())
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  user           User?
  phoneNumber    Int
  summary        String
  workExperience WorkExperience[]
  education      Education[]
  certification  Certification[]
  skills         Skills[]
  achievement    Achievement
  attachment     Attachment
  // user  User?
}

type WorkExperience {
  companyName      String
  designation      String
  currentlyWorking Boolean?
  id               String
  location         Location
  employeeType     String
  jobFamily        String
  jobSummary       String
  startDate        DateTime  @default(now())
  endDate          DateTime? @default(now())
  createdAt        DateTime  @default(now())
}

type Education {
  name              String
  diploma           String
  currentlyEnrolled Boolean?
  location          Location
  gpa               String
  description       String
  startDate         DateTime  @default(now())
  endDate           DateTime? @default(now())
  createdAt         DateTime  @default(now())
}

type Certification {
  name             String
  organization     String
  certificateId    String
  createdAt        DateTime  @default(now())
  issuedOn         DateTime  @default(now())
  validUntil       DateTime? @default(now())
  noExpiry         Boolean?
  certificateMedia String[]
}

type Skills {
  name  String
  level String
}

type Achievement {
  resume     String[]
  additional String[]
}

type Attachment {
  resume     String[]
  additional String[]
}

type SocialLinks {
  platform String
  link     String
}
